{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setuserId","updatedTodos","setUpdatedTodos","formSubmitted","setFormSubmitted","action","onSubmit","event","preventDefault","newTodo","Math","max","method","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06116a64.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n    {user.name}\n  </a>\n);\n","import { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={todo.completed\n      ? 'TodoInfo TodoInfo--completed'\n      : 'TodoInfo'}\n  >\n    <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n    {todo.user && (<UserInfo user={todo.user} />)}\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => {\n      return (\n        <TodoInfo todo={todo} key={todo.id} />\n      );\n    })}\n  </section>\n);\n","import React, { FormEventHandler, useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  // if there is no user with a given userId\n  return foundUser || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setuserId] = useState('');\n  const [updatedTodos, setUpdatedTodos] = useState(todos);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n\n  const handleSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n\n    if (title && userId) {\n      const newTodo = {\n        id: Math.max(...updatedTodos.map(todo => todo.id)) + 1,\n        title,\n        completed: false,\n        userId: +userId,\n        user: getUser(+userId),\n      };\n\n      setUpdatedTodos([...updatedTodos, newTodo]);\n      setFormSubmitted(false);\n      setTitle('');\n      setuserId('');\n    } else {\n      setFormSubmitted(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/todos\" onSubmit={handleSubmit} method=\"POST\">\n\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n            {' '}\n            <input\n              id=\"title\"\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={(event) => setTitle(event.target.value)}\n              data-cy=\"titleInput\"\n            />\n          </label>\n\n          {(!title && formSubmitted) && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n\n          <label htmlFor=\"title\">\n            User:\n            {' '}\n            <select\n              data-cy=\"userSelect\"\n              id=\"user\"\n              name=\"user\"\n              value={userId}\n              onChange={(event) => setuserId(event.target.value)}\n            >\n              <option value=\"\" disabled>Choose a user</option>\n              {usersFromServer.map(user => (\n                <option\n                  value={user.id}\n                  key={user.id}\n                >\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {(!userId && formSubmitted) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={updatedTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}